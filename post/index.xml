<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on lialzm的博客</title>
    <link>https://lialzm.github.io/post/</link>
    <description>Recent content in Posts on lialzm的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 25 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://lialzm.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>浏览器跨域知识点整理</title>
      <link>https://lialzm.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%A8%E5%9F%9F%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/</link>
      <pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%A8%E5%9F%9F%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/</guid>
      <description>为什么会出现跨域问题 出于安全原因,浏览器制订了同源策略 同源的定义 如果两个 URL 的 protocol、port (如果有指定的话)和 host 都相同的话，则这</description>
    </item>
    
    <item>
      <title>linux配置vscode编辑latex</title>
      <link>https://lialzm.github.io/post/vscode%E7%BC%96%E8%BE%91latex/</link>
      <pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/vscode%E7%BC%96%E8%BE%91latex/</guid>
      <description>texlive安装 使用iso模式安装 Acquiring TeX Live as an ISO image - TeX Users Group 1 2 mount -t iso9660 -o ro,loop,noauto /your/texlive.iso /mnt sudo /mnt/install-tl 设置环境变量 在 ~/.bashrc 或者 ~/.profile 设置PATH 1 PATH=/usr/local/texlive/2021/bin/x86_64-linux:$PATH vscode配置 安装 LaTeX-Workshop</description>
    </item>
    
    <item>
      <title>jvm对内存的分配</title>
      <link>https://lialzm.github.io/post/jvm%E5%AF%B9%E5%86%85%E5%AD%98%E7%9A%84%E5%88%86%E9%85%8D/</link>
      <pubDate>Thu, 20 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/jvm%E5%AF%B9%E5%86%85%E5%AD%98%E7%9A%84%E5%88%86%E9%85%8D/</guid>
      <description>相关参数 -Xms: JVM启动时申请的初始Heap值，默认为操作系统物理内存的1/64但小于1G,默认当空余堆内存大于70%时，JVM会减小heap的</description>
    </item>
    
    <item>
      <title>java中的锁</title>
      <link>https://lialzm.github.io/post/java%E4%B8%AD%E7%9A%84%E9%94%81/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/java%E4%B8%AD%E7%9A%84%E9%94%81/</guid>
      <description>定义 锁(Lock)和synchronized同步块一样，是一种线程同步机制 Lock 接口及其主要实现类都位于java.util.concurrent</description>
    </item>
    
    <item>
      <title>mysql两阶段提交和日志一致性</title>
      <link>https://lialzm.github.io/post/mysql%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4%E5%92%8C%E6%97%A5%E5%BF%97%E4%B8%80%E8%87%B4%E6%80%A7/</link>
      <pubDate>Thu, 30 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/mysql%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4%E5%92%8C%E6%97%A5%E5%BF%97%E4%B8%80%E8%87%B4%E6%80%A7/</guid>
      <description>redo log 当有一条记录要更新时，InnoDB 引擎就会先把记录写到 redo log（并更新内存），这个时候更新就算完成了。在适当的时候，将这个操作记录更新到</description>
    </item>
    
    <item>
      <title>jenkins pipeline使用</title>
      <link>https://lialzm.github.io/post/jenkins_pipeline%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 29 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/jenkins_pipeline%E4%BD%BF%E7%94%A8/</guid>
      <description>Jenkins Pipeline 的语法分為两类,Declarative Pipeline(声明式) 和 Scripted Pipeline, Scripted类型基于groovy比较灵活,但是上手难度比较高,</description>
    </item>
    
    <item>
      <title>jenkins pipeline结合docker实战</title>
      <link>https://lialzm.github.io/post/jenkins_pipeline%E7%BB%93%E5%90%88docker%E5%AE%9E%E6%88%98/</link>
      <pubDate>Wed, 29 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/jenkins_pipeline%E7%BB%93%E5%90%88docker%E5%AE%9E%E6%88%98/</guid>
      <description>下面是一个示例配置文件,包含了常用的步骤,基本每一个步骤都有注解 其中docker打包借助了maven的插件maven插件 1 2 3 4 5 6 7 8 9 10</description>
    </item>
    
    <item>
      <title>redis缓存穿透/雪崩/击穿及解决方案</title>
      <link>https://lialzm.github.io/post/redis%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F_%E9%9B%AA%E5%B4%A9%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 29 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/redis%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F_%E9%9B%AA%E5%B4%A9%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>缓存穿透 缓存穿透是指查询一个一定不存在的数据，由于缓存是不命中时被动写的，并且出于容错考虑，如果从存储层查不到数据则不写入缓存，这将导致这个</description>
    </item>
    
    <item>
      <title>redis和数据库双写一致性</title>
      <link>https://lialzm.github.io/post/redis%E5%A6%82%E4%BD%95%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%9D%E6%8C%81%E4%B8%80%E8%87%B4/</link>
      <pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/redis%E5%A6%82%E4%BD%95%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BF%9D%E6%8C%81%E4%B8%80%E8%87%B4/</guid>
      <description>有如下四个假设方案 先更新数据库,再更新缓存 先删除缓存,再更新数据库 先更新数据库,再删除缓存 先更新缓存,再更新数据库 方案一 先更新数据库,再更新</description>
    </item>
    
    <item>
      <title>nomad介绍</title>
      <link>https://lialzm.github.io/post/nomad%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/nomad%E5%AE%89%E8%A3%85/</guid>
      <description>nomad是一个轻量级的工作编排工具,可以管理容器和非容器化的应用程序 官网 基础概念 架构图 agent 基础模块,每个运行nomad进程称为一个agent</description>
    </item>
    
    <item>
      <title>nomad和docker结合</title>
      <link>https://lialzm.github.io/post/nomad%E5%92%8Cdocker%E7%BB%93%E5%90%88/</link>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/nomad%E5%92%8Cdocker%E7%BB%93%E5%90%88/</guid>
      <description>nomad支持调度多种drive,比如docker,java,podman等,比较常用的是和docker的结合 要求版本 1.8.2和 1.9 一个简单</description>
    </item>
    
    <item>
      <title>nomad配置文件介绍</title>
      <link>https://lialzm.github.io/post/nomad%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/nomad%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BB%8B%E7%BB%8D/</guid>
      <description>nomad的配置文件语法使用的是hashicorp自己开发的dsl,详细语法: GitHub - hashicorp/hcl: HCL is the HashiCorp configuration language. 下面是一个配置文件的介绍 1 2 3 4 5 6 7 8 9 10</description>
    </item>
    
    <item>
      <title>mybatis3源码阅读-查询结果映射</title>
      <link>https://lialzm.github.io/post/mybatis3%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E6%98%A0%E5%B0%84/</link>
      <pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/mybatis3%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E6%98%A0%E5%B0%84/</guid>
      <description>关键类: DefaultResultSetHandler 关键方法: DefaultResultSetHandler#handleResultSets 简单映射流程图 核心方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 public List&amp;lt;Object&amp;gt; handleResultSets(Statement stmt) throws SQLException { ErrorContext.instance().activity(&amp;#34;handling results&amp;#34;).object(mappedStatement.getId());</description>
    </item>
    
    <item>
      <title>java调试利器-arthas极简入门</title>
      <link>https://lialzm.github.io/post/java%E8%B0%83%E8%AF%95%E5%88%A9%E5%99%A8-arthas%E6%9E%81%E7%AE%80%E5%85%A5%E9%97%A8/</link>
      <pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/java%E8%B0%83%E8%AF%95%E5%88%A9%E5%99%A8-arthas%E6%9E%81%E7%AE%80%E5%85%A5%E9%97%A8/</guid>
      <description>Arthas 是Alibaba开源的Java诊断工具,基于greys实现 具体功能 当你遇到以下类似问题而束手无策时，Arthas可以帮助你解决： 这个类从哪</description>
    </item>
    
    <item>
      <title>http协议入门手札1</title>
      <link>https://lialzm.github.io/post/http%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%E6%89%8B%E6%9C%AD1/</link>
      <pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/http%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%E6%89%8B%E6%9C%AD1/</guid>
      <description>HTTP 最初是 Tim BernersLee 1989 年在欧洲核子研究组织（CERN）所发起的这个设想的基本理念是：借助多文档之间相互关联形成的超文本（HyperText），连成可</description>
    </item>
    
    <item>
      <title>mysql数据导入导出相关经验</title>
      <link>https://lialzm.github.io/post/mysql%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA%E7%9B%B8%E5%85%B3%E7%BB%8F%E9%AA%8C/</link>
      <pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/mysql%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA%E7%9B%B8%E5%85%B3%E7%BB%8F%E9%AA%8C/</guid>
      <description>日常需要使用到mysql数据库的迁移,但是当有视图,函数,存储过程的时候经常遇到dump的脚本重新导入后会报错,需要手工调整,下面总结了一些</description>
    </item>
    
    <item>
      <title>docker编译node-sass失败</title>
      <link>https://lialzm.github.io/post/docker%E7%BC%96%E8%AF%91node-sass%E5%A4%B1%E8%B4%A5/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/docker%E7%BC%96%E8%AF%91node-sass%E5%A4%B1%E8%B4%A5/</guid>
      <description>最近尝试将前端项目编译成docker方便管理,但是遇到当项目里依赖于node-sass报如下错误 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22</description>
    </item>
    
    <item>
      <title>postgre主从模式基于docker</title>
      <link>https://lialzm.github.io/post/postgre%E4%B8%BB%E4%BB%8E%E6%A8%A1%E5%BC%8F%E5%9F%BA%E4%BA%8Edocker/</link>
      <pubDate>Mon, 29 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/postgre%E4%B8%BB%E4%BB%8E%E6%A8%A1%E5%BC%8F%E5%9F%BA%E4%BA%8Edocker/</guid>
      <description>具体操作的时候注意ip的替换以及max_connections参数的变更 环境 docker postgres 10.14 详细步骤 环境准备 1 2 3 4 5 6 docker network create --driver bridge --subnet=172.18.12.0/16 --gateway=172.18.12.1 mynet docker run --name pgsmaster -p 5432:5432 --network=mynet</description>
    </item>
    
    <item>
      <title>docker-maven-plugin使用介绍</title>
      <link>https://lialzm.github.io/post/docker-maven-plugin%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Fri, 12 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/docker-maven-plugin%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</guid>
      <description>介绍 使用maven命令将项目构建为docker镜像 优点 可以使用maven的变量 可以和maven指令结合提高部署效率 GitHub - spotify/docker-maven-plugin: INACTIVE: A maven plugin for Docker 配置 1 2</description>
    </item>
    
    <item>
      <title>java线程池介绍</title>
      <link>https://lialzm.github.io/post/java%E7%BA%BF%E7%A8%8B%E6%B1%A0%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/java%E7%BA%BF%E7%A8%8B%E6%B1%A0%E4%BB%8B%E7%BB%8D/</guid>
      <description>这是对以前线程池相关笔记的重新整理,基本上包含了线程池相关主要的知识点 为什么需要使用线程池 创建新的线程代价大 new Thread方式线程缺乏统一的</description>
    </item>
    
    <item>
      <title>java线程的使用</title>
      <link>https://lialzm.github.io/post/java%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/java%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>线程的创建 java创建线程有两种方法 创建Thread的子类 1 2 3 4 5 6 7 public class MyThread extends Thread { public void run(){ System.out.println(&amp;#34;MyThread running&amp;#34;); } } ​MyThread myThread = new MyThread(); myTread.start(); 实现Runna</description>
    </item>
    
    <item>
      <title>nomad管理可变镜像</title>
      <link>https://lialzm.github.io/post/nomad%E7%AE%A1%E7%90%86%E5%8F%AF%E5%8F%98%E9%95%9C%E5%83%8F/</link>
      <pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/nomad%E7%AE%A1%E7%90%86%E5%8F%AF%E5%8F%98%E9%95%9C%E5%83%8F/</guid>
      <description>问题 以前一直使用的是docker-compose,现在切换到nomad,遇到的问题 原流程: build镜像后,使用docker kill 掉原有容器,并</description>
    </item>
    
    <item>
      <title>如何更好的使用搜索引擎</title>
      <link>https://lialzm.github.io/post/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BC%9A%E4%BD%BF%E7%94%A8%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%90%97/</link>
      <pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BC%9A%E4%BD%BF%E7%94%A8%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%90%97/</guid>
      <description>学会使用搜索引擎的重要性: 互联网上有大量的信息,搜索引擎可以让这些信息更容易被找到 搜索思维 找什么(what): 使用关键字准确描述搜索目标 哪里</description>
    </item>
    
    <item>
      <title>docker入门</title>
      <link>https://lialzm.github.io/post/docker%E5%85%A5%E5%9D%91-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/docker%E5%85%A5%E5%9D%91-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%AE%89%E8%A3%85/</guid>
      <description>准备工作 安装ubuntu 从ubuntu官网下载ubuntu16.04.2(服务器版)安装包,安装到虚拟机中,这里一直下一步就行了,唯一需要注</description>
    </item>
    
    <item>
      <title>如何阅读一本书读书笔记</title>
      <link>https://lialzm.github.io/post/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/</guid>
      <description>早在2013年,这本书就被我加入到待读列表但是直到前段时间才开始读,拖延癌😅 概述 这本书是一本工具书,主要是教人如何阅读一本书(非资讯类),并</description>
    </item>
    
    <item>
      <title>爬虫开发流程</title>
      <link>https://lialzm.github.io/post/%E7%88%AC%E8%99%AB%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/%E7%88%AC%E8%99%AB%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/</guid>
      <description>爬虫开发流程思维导图 图</description>
    </item>
    
    <item>
      <title>使用emacs&#43;hugo写博客</title>
      <link>https://lialzm.github.io/post/hugo%E5%92%8Cemacs%E7%BB%93%E5%90%88/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/hugo%E5%92%8Cemacs%E7%BB%93%E5%90%88/</guid>
      <description>以前一直使用的是hexo,但是随着开始使用emacs,就想使用org mode来管理博客,正好emacs有个ox-hugo的插件可以比较方便的</description>
    </item>
    
    <item>
      <title>使用hexo在github上搭建博客</title>
      <link>https://lialzm.github.io/post/hexo%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/hexo%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</guid>
      <description>安装 1 2 hexo init npm install hexo-deployer-git --save 安装hexo-cli 1 npm install -g hexo-cli 安装教程 常用命令 hexo的命令都需要在部署hexo的文件夹下执行 1 2 3 4 5 hexo new &amp;lt;title&amp;gt; #创建文件</description>
    </item>
    
    <item>
      <title>spring源码解析-Bean的实例化</title>
      <link>https://lialzm.github.io/post/spring%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90-bean%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/spring%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90-bean%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96/</guid>
      <description>在上一章我们已经获取到了 BeanDefinition ,现在就可以开始对Bean进行实例化的操作了 Bean的实例化分为两种情况延迟加载和非延迟加载 这里只分析非延迟加载的</description>
    </item>
    
    <item>
      <title>Elasticsearch建模</title>
      <link>https://lialzm.github.io/post/elasticsearch%E5%BB%BA%E6%A8%A1/</link>
      <pubDate>Tue, 17 Jul 2018 11:46:20 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/elasticsearch%E5%BB%BA%E6%A8%A1/</guid>
      <description>什么是数据建模 数据建模是一个用于定义和分析在组织的信息系统的范围内支持商业流程所需的数据要求的过程 数据类型 在索引的时候,如果字段第一次出现会</description>
    </item>
    
    <item>
      <title>log4j配置经验</title>
      <link>https://lialzm.github.io/post/log4j%E9%85%8D%E7%BD%AE%E7%BB%8F%E9%AA%8C/</link>
      <pubDate>Fri, 06 Jul 2018 14:59:43 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/log4j%E9%85%8D%E7%BD%AE%E7%BB%8F%E9%AA%8C/</guid>
      <description>log4j配置 根日志 log4j.rootLogger 格式 log4j.rootLogger = [ level ] , loggerName1 , loggerName2 第一个参数表示默认级别 日志级别从高到低分别为: FATAL,ERROR,WARN,INFO,DEBUG 一般线上使用INFO级别 log4j可以为不同的 Appender</description>
    </item>
    
    <item>
      <title>java如何排查内存溢出</title>
      <link>https://lialzm.github.io/post/java%E5%A6%82%E4%BD%95%E6%8E%92%E6%9F%A5%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/</link>
      <pubDate>Fri, 08 Jun 2018 14:27:44 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/java%E5%A6%82%E4%BD%95%E6%8E%92%E6%9F%A5%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA/</guid>
      <description>OOM前排查 使用jmap导出当前堆dump进行离线分析 测试代码 1 2 3 4 5 6 7 8 9 10 11 12 public class MyTest { private static List&amp;lt;String&amp;gt; list=new ArrayList&amp;lt;&amp;gt;(); public static void main(String[] args) throws InterruptedException { for (int i=0;i&amp;lt;1000;i++){ list.add(&amp;#34;111&amp;#34;); } TimeUnit.SECONDS.sleep(60); } } 实时</description>
    </item>
    
    <item>
      <title>java并发(Synchronized关键字)</title>
      <link>https://lialzm.github.io/post/java%E5%B9%B6%E5%8F%91synchronized%E5%85%B3%E9%94%AE%E5%AD%97/</link>
      <pubDate>Sat, 19 May 2018 22:30:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/java%E5%B9%B6%E5%8F%91synchronized%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
      <description>java中的同步块使用synchronized标记,所有同步在一个对象上的同步块在同时只能被一个线程进入并执行,可保证其内部的共享变量实现多</description>
    </item>
    
    <item>
      <title>Java内存模型学习笔记</title>
      <link>https://lialzm.github.io/post/java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 06 Apr 2018 22:30:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>什么是JMM JMM(java内存模型)源于物理机器CPU架构的内存模型，最初用于解决MP(多处理器架构)系统中的缓存一致性问题 JMM可以分为</description>
    </item>
    
    <item>
      <title>如何使用各种图形去分析源码</title>
      <link>https://lialzm.github.io/post/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%90%84%E7%A7%8D%E5%9B%BE%E5%BD%A2%E5%8E%BB%E5%88%86%E6%9E%90%E6%BA%90%E7%A0%81/</link>
      <pubDate>Wed, 21 Mar 2018 16:08:25 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%90%84%E7%A7%8D%E5%9B%BE%E5%BD%A2%E5%8E%BB%E5%88%86%E6%9E%90%E6%BA%90%E7%A0%81/</guid>
      <description>为什么要画图 直观 人脑的容量有限,使用图来抽象复杂的过程 流程图 使用markdown画流程图 语法规则: 定义变量 变量名=&amp;gt;操作: 名称 常用操作</description>
    </item>
    
    <item>
      <title>spring源码解析-开篇</title>
      <link>https://lialzm.github.io/post/spring%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90-%E5%BC%80%E7%AF%87/</link>
      <pubDate>Mon, 19 Mar 2018 17:51:58 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/spring%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90-%E5%BC%80%E7%AF%87/</guid>
      <description>做javaweb接触最多的框架莫过于spring了,随着对框架使用的逐渐熟练要再上一层的话,必须了解框架底层的实现原理,乃至自己做一个框架 s</description>
    </item>
    
    <item>
      <title></title>
      <link>https://lialzm.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid>
      <description></description>
    </item>
    
    <item>
      <title>数据仓库概念介绍</title>
      <link>https://lialzm.github.io/post/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lialzm.github.io/post/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%BB%8D/</guid>
      <description>为什么需要数据仓库 如果直接从业务数据库取数据会有如下几个问题 结构复杂 数据杂乱（不同的数据库针对相同的业务可能会有不同的命名，处理方式） 理解困</description>
    </item>
    
  </channel>
</rss>
